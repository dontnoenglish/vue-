{"version":3,"file":"vue.js","sources":["../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/observe/dep.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/observe/array.js","../../src/observe/index.js","../../src/util.js","../../src/state.js","../../src/init.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` //标签名\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // ?:匹配不捕获\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)  //标签开头的正则，捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配标签结尾的\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ //匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/ //匹配标签结束的\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nexport function parseHTML(html){\r\n    function createASTElement(tagName,attrs){\r\n        return { \r\n            tag:tagName, //标签名\r\n            attrs,  //属性集合\r\n            children:[],  //子节点\r\n            type:1,  //元素类型\r\n            parent:null //父元素\r\n        }\r\n    }\r\n    let root,currentParent; //root 记录根节点，currentParent记录当前元素，作为父节点使用。\r\n    const stack = [] //使用栈结构，清楚父子关系\r\n    function start(tagName,attrs){\r\n        let ast = createASTElement(tagName,attrs)\r\n        if(!root){\r\n            root = ast\r\n        }\r\n        currentParent = ast //记录此时的解析的标签，用于作为父元素使用\r\n        stack.push(ast)\r\n    }\r\n    function end(tagName){\r\n        // <div><p></p>123</div>   stack:[div,p]\r\n        let element = stack.pop() // stack :[div] element:p\r\n        //但是此时的currentParent指向的是p，此时div应该是p的父节点，所以我们要修改currentParent\r\n        currentParent = stack[stack.length-1]\r\n        //这里我们就可以弄清楚节点之间的父子关系\r\n        if(currentParent){\r\n            element.parent = currentParent\r\n            currentParent.children.push(element)\r\n        }\r\n        // console.log(tagName,'---末尾---');\r\n    }\r\n    function chars(text){\r\n        text = text.replace(/\\s/g,'') //取消空格\r\n        if(text){\r\n            currentParent.children.push({\r\n                type:3,\r\n                text\r\n            })\r\n        }\r\n    }    \r\n     //只要html不为空就一直解析\r\n     while(html){\r\n         let textEnd = html.indexOf('<')\r\n         if(textEnd == 0){\r\n             //说明此时为标签\r\n            const startTagMatch = parseStartTag() //开始标签返回的结果\r\n            if(startTagMatch){\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue;\r\n            }\r\n            const endTagMatch = html.match(endTag) //如果能匹配到结尾标签\r\n            if(endTagMatch){\r\n                advance(endTagMatch[0].length) //把结尾标签删了\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n         }\r\n         let text;\r\n         if(textEnd>0){\r\n            //说明此时有文本\r\n            text = html.substring(0,textEnd)\r\n         }\r\n         if(text){\r\n            advance(text.length)\r\n            chars(text)\r\n         }\r\n     }\r\n     //字符串截取操作\r\n     function advance(n){\r\n          html = html.substring(n)\r\n     }\r\n     function parseStartTag(){\r\n        const start = html.match(startTagOpen) //匹配开头的正则\r\n        if(start){\r\n            const match = {\r\n                tagName:start[1],\r\n                attrs:[]\r\n            }\r\n            //此时截取了div这个标签头，截取一点我们就删一点\r\n            advance(start[0].length)\r\n            //截取属性\r\n            // 还有一种情况就是<div/>直接是闭合标签 。 属性可能有多个，我们要使用while不断判断\r\n            let end,attr;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                // 匹配到的属性可能是 aa = \"zz\"  也可能是 aa = 'zz'  aa = zz 都有可能，这三种情况分别对应 attr[3] attr[4] attr[5] \r\n                match.attrs.push({name:attr[1],value:attr[3]||attr[4]||attr[5]})\r\n                advance(attr[0].length) //然后去掉当前属性\r\n            } \r\n            if(end){\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n     }\r\n     //match test exec  match是字符串在前面，test,exec是正则在前面\r\n     return root\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs){\r\n    let str = ''\r\n    for(let i=0;i<attrs.length;i++){\r\n        let attr = attrs[i]\r\n        //如果style类型的话需要做单独处理。因为style对应的可能会有多个。但普通的其他属性都是一对一。\r\n        if(attr.name == 'style'){\r\n            let obj = {}\r\n            // style='border: 12;color: 21;' style可能对应的是这种。\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        //其他属性对应的键和值直接拼接就可以。 这里因为对style的做了单独的处理，使得attr.value为对象。所以这里读的话要使用\r\n        // JSON.stringify\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` //每个属性后面加个 , 做分割\r\n    }\r\n    return `{${str.slice(0,-1)}}` //返回一个 `{}` 这种类型字符串，并且去掉str中最后一个 , \r\n}\r\n\r\nfunction gen(node){\r\n    //元素节点\r\n    if(node.type == 1){\r\n        return generate(node)\r\n    }\r\n    //文本节点\r\n    if(node.type == 3){\r\n        let text = node.text\r\n        //有两种情况，一种是普通文本，一种是带 {{}}的mustache语法 \r\n        if(!defaultTagRE.test(text)){  \r\n            return `_v(${JSON.stringify(text)})`\r\n        } \r\n        //上面使用test检测有个问题，就是检测一次过后，lastIndex就会向后推，后面再检测就有可能出问题\r\n        //所以每次检测完，就把lastIndex重置为0\r\n        let lastIndex = defaultTagRE.lastIndex = 0\r\n        let tokens = [] //存放每一段的代码\r\n        let match,index  //match是每次匹配的结果，index为截取的最后一个索引\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index\r\n            //slice方法，截取包括结束位置的字符，substring不包括结束位置\r\n            if(index>lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index))) \r\n            } \r\n            //match[0]为匹配到的 {{xxx}}  ,match\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastIndex = index + match[0].length\r\n        }\r\n        //如果此时的最后的索引还小于文本的长度，说明后面还有文字内容\r\n        if(lastIndex<text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n    //slice substring substr\r\n    //exec match test   match是字符串在前，其他两个方法是正则在前\r\n}\r\n\r\nfunction genChildren(node){\r\n    let children = node.children\r\n    if(children){//将转化后的所有儿子用逗号拼接起来\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\n\r\nexport function generate(ast){\r\n    let children = genChildren(ast)\r\n    let code = `_c('${ast.tag}',${\r\n        ast.attrs.length ? `${genProps(ast.attrs)}`:`undefined`\r\n    }${\r\n        children?`,${children}`:''\r\n    })`\r\n    return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from './generate'\r\n\r\nexport function compileToFunctions(template){\r\n    /*\r\n    这里要将template dom结构转化为render函数，肯定不能直接转化.要通过 ast语法树\r\n    ast语法树与虚拟dom的区别。\r\n    虚拟dom是用对象的形式描述节点。ast语法树也可以用对象的方式描述节点，但ast语法树用来描述语言本身。\r\n    它也可以用来描述 const a = 1; 这样一句代码。\r\n    总结：ast语法树是对原生语法的描述。虚拟dom是对dom节点的描述。共同点都是以对象的形式描述。\r\n    */\r\n    //1.将template转化为ast语法树\r\n    let ast = parseHTML(template)\r\n    //2.优化静态节点\r\n\r\n\r\n    //通过ast树，生成code代码\r\n    // _c就是新的节点。 _v就是文本  _s是mustache语法中的变量 \r\n    // _c('div',{id:\"app\",aa:\"12\",style:{\"border\":\" 12\",\"color\":\" 21\"}},_v(\"123\"+_s(哈哈哈)+_s(msg)+\"987\"),_c(span,undefined,_v(\"321\")))\r\n    //3.通过generate函数生成上述代码\r\n    let code = generate(ast)\r\n    //生成的代码中的mustache中的变量怎么获得呢？这里取不到vm。 在此使用with语法\r\n    //使用with语法，我们在使用render函数时，让其内部this指向vm即可拿到data中的变量\r\n    //4.将字符串变成函数\r\n    let render = new Function(`with(this){return ${code}}`)\r\n    return render\r\n}","let id=0\r\nclass Dep {\r\n     constructor(){\r\n         this.subs=[]\r\n         this.id = id++\r\n     }\r\n     depend(){\r\n        //  this.subs.push(Dep.target)  将watcher加入subs数组中\r\n        Dep.target.addDep(this)  //实现双向记忆，watcher记住dep的同时，dep也记住watcher\r\n     }\r\n     addSub(watcher){\r\n         this.subs.push(watcher)\r\n     }\r\n     notify(){\r\n         this.subs.forEach(watcher=>watcher.update())\r\n     }\r\n}\r\n\r\nDep.target = null\r\nexport function pushTarget(watcher){\r\n     Dep.target = watcher\r\n}\r\nexport function popTarget(){\r\n    Dep.target = null\r\n}\r\n\r\nexport default Dep\r\n\r\n\r\n//每个属性都对应一个dep，dep是用来收集watcher的\r\n","import { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n     constructor(vm,exprOrFn,cb,options){\r\n        this.vm = vm\r\n        this.exprOrFn = exprOrFn //数据驱动页面重新渲染的render函数\r\n        this.cb = cb\r\n        this.options = options\r\n        this.id = id++  //watcher的唯一标识\r\n        this.deps = []//watcher记录有多少哥dep依赖他\r\n        this.depsId = new Set\r\n        if(typeof exprOrFn == 'function'){\r\n            this.getter = exprOrFn\r\n        }\r\n        this.get()\r\n     }\r\n     addDep(dep){\r\n         let id = dep.id\r\n         if(!this.depsId.has(id)){\r\n             this.deps.push(dep) \r\n             this.depsId.push(id)\r\n             dep.addSub(this)\r\n         }\r\n     }\r\n    get(){\r\n        pushTarget(this)  //当前watcher实例\r\n        this.getter();\r\n        popTarget()\r\n    }\r\n    run(){\r\n        this.get()\r\n    }\r\n    update(){\r\n        // this.get() //重新渲染\r\n        //这里不要频繁的渲染，也就是我们需要异步更新\r\n        queueWatcher(this)\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false\r\n\r\nfunction queueWatcher(watcher){\r\n    const id = watcher.id\r\n    if(has[id] == null){  //用id标注watcher，用于去重\r\n        queue.push(watcher)\r\n        has[id] = true   \r\n        if(!pending){\r\n            pending = true\r\n            setTimeout(()=>{\r\n               queue.forEach(watcher=>watcher.run())\r\n               queue = []\r\n               has = {}\r\n               pending = false\r\n            })\r\n  \r\n        }   \r\n    }\r\n}\r\n\r\nexport default Watcher\r\n","export function patch(oldVnode,vnode){\r\n     //我们要使用虚拟dom节点(vnode)替换oldVnode\r\n     let dom = createEle(vnode) //产生真正的dom节点\r\n     let parentEle = oldVnode.parentNode //获取老的节点的父节点 也就是body\r\n     parentEle.insertBefore(dom,oldVnode.nextSibling) //将真实dom节点插入body中\r\n     parentEle.removeChild(oldVnode)  //删除老的节点\r\n     return dom\r\n}\r\n\r\nfunction createEle(vnode){\r\n    let {tag,children,key,data,text} = vnode\r\n    if(typeof tag == 'string'){\r\n        //元素节点\r\n        vnode.el = document.createElement(tag)\r\n        //只有元素节点有属性,将属性添加至vdom上\r\n        updateProperties(vnode)\r\n        children.forEach(child=>{\r\n            //遍历儿子，将儿子渲染后的结果仍到父级中。会有很多个层级的嵌套，使用递归。\r\n            vnode.el.appendChild(createEle(child))\r\n        })\r\n    }else{\r\n        //文本节点\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction updateProperties(vnode){\r\n    let el = vnode.el\r\n    let props = vnode.data || {}   //\r\n    for(let key in props){\r\n        if(key == 'style'){ //{color:red}\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        }else if(key == 'class'){\r\n            el.className = el.class\r\n        }else{\r\n            el.setAttribute(key,props[key])\r\n        }\r\n    }\r\n}\r\n\r\n//vue渲染流程\r\n// 初始化数据=>模板进行编译(转为ast树)=>render函数=>生成虚拟节点=>生成真实dom=>替换页面\r\n","import Watcher from './observe/watcher'\r\nimport { patch }  from './vdom/patch'\r\nexport function lifecycleMixin(Vue){\r\n    Vue.prototype._update = function (vnode){\r\n        //将虚拟节点转化为真实节点\r\n        const vm = this\r\n        vm.$el = patch(vm.$el,vnode)  //用返回的新的节点替换原有的\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm,el){\r\n    vm.$el = el\r\n    //调用render方法，去渲染el\r\n    callHook(vm,'beforeMount')\r\n    //先调用render方法创建虚拟节点(render)，再将虚拟节点渲染(update)到真实el上。每次数据更新都得掉这两个方法\r\n    // vm._update(vm._render())  \r\n    let updateComponent = ()=>vm._update(vm._render());\r\n    new Watcher(vm,updateComponent,()=>{\r\n        callHook(vm,'beforeUpdate')\r\n    })\r\n    callHook(vm,'mounted')\r\n}\r\n\r\n\r\n// callHook(vm,'beforeCreate')\r\nexport function callHook(vm,hook){\r\n    const handlers = vm.$options[hook]  //vm.$options.created = [a1,a2]\r\n    if(handlers){\r\n        for(let i=0;i<handlers.length;i++){\r\n            handlers[i].call(vm)\r\n        }\r\n    }\r\n}\r\n","//拿到数组原型上原来的方法\r\nlet oldArrayPrototypeMethods = Array.prototype\r\n\r\nexport let arrayMethods = Object.create(oldArrayPrototypeMethods)\r\n\r\nconst methods = [\r\n    'pop','shift','push','unshift','reverse','splice','sort'\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function(...args){\r\n        console.log('数组方法被调用了');\r\n        const result = oldArrayPrototypeMethods[method].apply(this,args)\r\n        let inserted;\r\n        //这里的this是谁？  谁调用了这些方法，this就是谁。 也就是Observe类中的value\r\n        let ob = this.__ob__\r\n        //使用添加的方法，往数组中添加对象，任然做不到响应式。所以我们就对添加的对象添加响应式。\r\n        switch(method){\r\n            case 'push':  //arr.push({a:1},{b:2}) 仍然做不到响应式\r\n            case 'unshift': //arr.unshift({a:1},{b:2})  同理\r\n                inserted = args\r\n            case 'splice':  //arr.splice(0,0,{a:1}) 使用splice新增的话，新增的参数为args的第三个参数\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        //如果添加了，就对添加的数组中的对象添加响应式\r\n        if(inserted) ob.observeArray(inserted)\r\n        ob.dep.notify()  //使用方法进行修改值时，让watcher更新\r\n        return result\r\n    }\r\n})\r\n","import {\r\n    arrayMethods\r\n} from './array'\r\nimport Dep from './dep'\r\nclass Observer {\r\n    constructor(value) {\r\n        this.dep = new Dep\r\n        //给对数据劫持的value添加一个标记，只要有 __ob__就说明被监测过\r\n        Object.defineProperty(value, '__ob__', {\r\n            enumerable: false, //不能被枚举，也就是不能被循环遍历出来\r\n            configurable: false, //不可以修改，不可以删除\r\n            //将当前的实例定义到value上。这样 array.js才能使用 Class Observer上的原型方法，也就是walk,observerArray这两个方法。value这里被定义为当前实例\r\n            value: this\r\n        })\r\n\r\n        //使用defineProperty数据劫持\r\n        // 如果是数组的话就不要进行劫持，性能太差。我们这边只要重写能够改变数组本身的方法即可\r\n        if (Array.isArray(value)) {\r\n            // pop shift push unshift splice sort reverse\r\n            //将arrayMethods作为value的原型   等同于 value.__proto__ = arrayMethods\r\n            Object.setPrototypeOf(value, arrayMethods)\r\n            //此时只是对Array中的方法做了劫持，如果数组中有对象则依然劫持不到\r\n            this.observeArray(value) //我们使用observeArray进行对数组中的对象进行劫持，数组中的普通类型是不做观测的\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data)\r\n        keys.forEach(key => {\r\n            defineReactive(data, key, data[key])\r\n        })\r\n    }\r\n    observeArray(value) {\r\n        value.forEach(item => {\r\n            observe(item)\r\n        })\r\n    }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n    let childOb = observe(value) // 用于给深层次的对象添加响应式。没有这一行的话，只能给第一层对象添加响应式\r\n    let dep = new Dep() //每个属性都对应一个dep\r\n    Object.defineProperty(data, key, {\r\n        // 获取值\r\n        get() {\r\n            //获取数据的时候，我们让当前watcher加入subs数组中\r\n            if(dep.target){\r\n                dep.depend();\r\n                if(childOb){  //可能是数组也可能是对象\r\n                    childOb.dep.depend()  //数组存起来这个渲染的watcher。等触发的时候调用\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        //修改值\r\n        set(newValue) {\r\n            if (newValue == value) return\r\n            //如果用户将值修改为对象的话，继续监控\r\n            observe(newValue) //observe函数中有数据类型判断\r\n            value = newValue\r\n            //属性变化的时候，通知watcher更新\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    //这里做一个条件判断，方便后面递归给深层次的对象添加响应式\r\n    if (typeof data != 'object' || data == null) {\r\n        return \r\n    }\r\n    //如果数据上游__ob__，说明已经被劫持过，直接返回就行。\r\n    if(data.__ob__){\r\n        return data\r\n    }\r\n    return new Observer(data)\r\n}","export function proxy(vm,data,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            console.log(vm,data,key);\r\n            return vm[data][key]\r\n        },\r\n        set(newValue){\r\n            vm[data][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nconst strats = {}\r\nstrats.data = function (parentVal,childVal){\r\n    return childVal   //这里有合并data的策略\r\n}\r\n// strats.computed = function (){}\r\n// strats.watch = function (){}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'update',\r\n    'beforeDestroy',\r\n    'destroyed'\r\n];\r\n\r\n//这个函数就能体现出生命周期的原理。采用数组的方法，将所有生命周期函数压进去，合适的时候调用\r\nfunction mergeHook(parentVal,childValue){  //声明周期的合并\r\n     if(childValue){\r\n         if(parentVal){\r\n             return parentVal.concat(childValue)  //爸爸和儿子进行合并\r\n         }else{\r\n             return [childValue]  //儿子需要转化为数组\r\n         }\r\n     }else{\r\n         return parentVal  //直接用父亲的\r\n     }\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach(hook=>{\r\n    strats[hook] = mergeHook\r\n})\r\n\r\nexport function mergeOptions(parent = {},child = {}){\r\n    //遍历父亲，可能父亲有，可能儿子有\r\n    const options = {}\r\n    for(let key in parent){ //父亲和儿子都有，就在这处理\r\n        mergeField(key)\r\n    }\r\n    for(let key in child){ //儿子有，父亲没有\r\n        if(!parent.hasOwnProperty(key)){\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key){  //合并字段\r\n        if(strats[key]){\r\n            options[key] = strats[key](parent[key],child[key])\r\n        }else{\r\n            options[key] = child[key]\r\n        }\r\n    }\r\n    return options\r\n}\r\n","import { observe } from \"./observe/index\"\r\nimport { proxy } from \"./util\"\r\nexport function initState(vm){\r\n    const opts = vm.$options\r\n    if(opts.props){\r\n        initProps(vm)\r\n    }\r\n    // if(opts.data){\r\n        initData(vm)\r\n    // }\r\n    if(opts.methods){\r\n        initMethods(vm)\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm)\r\n    }\r\n}\r\n\r\nfunction initProps(vm){\r\n\r\n}\r\n//初始化data\r\nfunction initData(vm){\r\n    let data = vm.$options.data\r\n    //这里的data有可能是箭头函数，有可能是对象。如果是箭头函数的话，那他的this就不会指向vm，所以我们要使用call改变this指向\r\n    vm._data = data = typeof data == 'function' ? data.call(vm) : data  //此时data就肯定是一个对象了\r\n    //当我去vm上面取data中的数据，不再是vm._data.xxx  而是直接vm.xxx 。此时，我们就需要代理\r\n    for(let key in data){\r\n        proxy(vm,'_data',key)\r\n    }\r\n    //接下来，我们就要对data这个对象进行一个数据劫持\r\n    observe(data)\r\n}\r\n\r\nfunction initMethods(vm){\r\n\r\n}\r\n\r\nfunction initComputed(vm){\r\n\r\n}\r\n","import { compileToFunctions } from \"./compiler/index\"\r\nimport { callHook, mountComponent } from \"./lifecycle\"\r\nimport { initState } from \"./state\"\r\nimport { mergeOptions } from \"./util\"\r\n/*\r\n    提供初始化操作\r\n*/\r\n\r\nexport function init(Vue){\r\n\r\n    //全局组件和局部组件的区别\r\n    //全局组件会在vue的初始化的时候将当前组件合并到全局上去\r\n    Vue.prototype._init = function(options){\r\n        const vm = this\r\n        // vm.$options = options\r\n        \r\n        vm.$options = mergeOptions(vm.constructor.options,options)  //将用户自定义的options和全局的options合并\r\n\r\n        //初始化状态 比如methods  computed  props  data\r\n        callHook(vm,'beforeCreate') //调声明周期函数\r\n        initState(vm)  //初始化数据之前，调用 'beforeCreate' ,初始化数据后 'created'\r\n        callHook(vm,'created')\r\n        //进行挂载\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el){\r\n        //挂载操作\r\n        //挂载操作的优先级  render>template>el == $mount\r\n        const vm = this\r\n        const options = vm.$options\r\n        el = document.querySelector(el)\r\n        vm.$el = el\r\n        if(!options.render){\r\n            //没有render，就要将template转化成render\r\n            let template = options.template\r\n            if(!template && el){\r\n                template = el.outerHTML\r\n            }\r\n            //将模板字符串转换为render函数\r\n            const render = compileToFunctions(template)\r\n            options.render = render  //最终渲染的时候，都是使用render方法\r\n        }\r\n        //需要挂载el对应的组件\r\n        mountComponent(vm,el)\r\n    }\r\n}\r\n","export function renderMixin(Vue){\r\n    Vue.prototype._c = function(){ //创建虚拟元素(vnode)\r\n        return createElement(...arguments)\r\n    }\r\n    Vue.prototype._s = function(val){ // 代表mustache中的变量\r\n        return val == null?'':(typeof val == 'object')?JSON.stringify(val):val\r\n    }\r\n    Vue.prototype._v = function(){  //创建虚拟文本节点\r\n        return createText(...arguments)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        const vm = this\r\n        const render = vm.$options.render\r\n        let vnode = render.call(vm)\r\n        return vnode\r\n    }\r\n}\r\n\r\nfunction createElement(tag,data={},...children){\r\n    return vnode(tag,data,data.key,children)\r\n}\r\nfunction createText(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n//用来产生虚拟dom\r\nfunction vnode(tag,data,key,children,text){\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n}\r\n","import { init } from './init'\r\nimport { lifecycleMixin } from './lifecycle'\r\nimport { renderMixin } from './vdom/index'\r\n/*\r\n   这里为什么不用class，而是用function呢，因为我们后续的操作大多数要往vue的原型上加方法，\r\n   而class往原型上加方法，要在class类中写，而function则直接在prototype上加就行。vue源码也是如此\r\n*/\r\n\r\nfunction Vue(options){\r\n    this._init(options)\r\n}\r\ninit(Vue)  //挂载操作\r\nlifecycleMixin(Vue)  // _update\r\nrenderMixin(Vue) // _render\r\n\r\nexport default Vue\r\n\r\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","attrs","tag","children","type","parent","root","currentParent","stack","start","ast","push","end","element","pop","length","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","value","defaultTagRE","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","gen","node","generate","test","lastIndex","tokens","index","exec","trim","join","genChildren","map","child","code","compileToFunctions","template","render","Function","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","options","deps","depsId","Set","getter","get","dep","has","addSub","queueWatcher","queue","pending","setTimeout","run","patch","oldVnode","vnode","dom","createEle","parentEle","parentNode","insertBefore","nextSibling","removeChild","data","el","document","createElement","updateProperties","appendChild","createTextNode","props","styleName","style","className","setAttribute","lifecycleMixin","Vue","prototype","_update","$el","mountComponent","callHook","updateComponent","_render","hook","handlers","$options","call","oldArrayPrototypeMethods","Array","arrayMethods","Object","create","methods","method","console","log","args","result","apply","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","configurable","isArray","setPrototypeOf","walk","keys","defineReactive","observe","childOb","depend","set","newValue","proxy","strats","parentVal","childVal","LIFECYCLE_HOOKS","mergeHook","childValue","concat","mergeOptions","mergeField","hasOwnProperty","initState","opts","initData","computed","_data","init","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createText","undefined"],"mappings":"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"}